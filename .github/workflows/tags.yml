name: tags

on:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: '1.24'

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Validate
        run: make validate

  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]
        executable: [ tgnotifier ]
        # executable: [ tgnotifier, tgnotifierui ]
    runs-on: ${{ matrix.os }}
    env:
      ARTIFACT_NAME: ${{ matrix.executable }}_${{ github.ref_name }}_${{ matrix.os }}
      BUILD_CMD: ${{ matrix.executable == 'tgnotifierui' && 'build_gui' || 'build' }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build
        if: matrix.os != 'windows-latest'
        run: make ${{ env.BUILD_CMD }} build_arguments='-o ${{ env.ARTIFACT_NAME }}'

      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: make ${{ env.BUILD_CMD }} build_arguments='-o ${{ env.ARTIFACT_NAME }}.exe'

      - name: Upload executable artifact
        if: matrix.os != 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_NAME }}
          if-no-files-found: error

      - name: Upload Windows executable artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_NAME }}.exe
          if-no-files-found: error

  autorelease:
    name: Create Release
    runs-on: 'ubuntu-latest'
    needs: [validate, build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}
          pattern: tgnotifier*
          merge-multiple: true

      - name: Print artifacts
        run: ls -R ${{ github.workspace }}

      - name: Create draft release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >-
          gh release create ${{ github.ref_name }} ${{ github.workspace }}/tgnotifier*
          --title "${{ github.ref_name }}"
          --generate-notes
          --draft