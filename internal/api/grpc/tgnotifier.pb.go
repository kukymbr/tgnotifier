// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: tgnotifier.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BotName       *string                `protobuf:"bytes,1,opt,name=bot_name,json=botName" json:"bot_name,omitempty"`
	ChatName      *string                `protobuf:"bytes,2,opt,name=chat_name,json=chatName" json:"chat_name,omitempty"`
	Message       *MessageRequest        `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	mi := &file_tgnotifier_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tgnotifier_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_tgnotifier_proto_rawDescGZIP(), []int{0}
}

func (x *SendMessageRequest) GetBotName() string {
	if x != nil && x.BotName != nil {
		return *x.BotName
	}
	return ""
}

func (x *SendMessageRequest) GetChatName() string {
	if x != nil && x.ChatName != nil {
		return *x.ChatName
	}
	return ""
}

func (x *SendMessageRequest) GetMessage() *MessageRequest {
	if x != nil {
		return x.Message
	}
	return nil
}

type MessageRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Text                *string                `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	ParseMode           *string                `protobuf:"bytes,2,opt,name=parse_mode,json=parseMode" json:"parse_mode,omitempty"`
	DisableNotification *bool                  `protobuf:"varint,3,opt,name=disable_notification,json=disableNotification" json:"disable_notification,omitempty"`
	ProtectContent      *bool                  `protobuf:"varint,4,opt,name=protect_content,json=protectContent" json:"protect_content,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *MessageRequest) Reset() {
	*x = MessageRequest{}
	mi := &file_tgnotifier_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageRequest) ProtoMessage() {}

func (x *MessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tgnotifier_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageRequest.ProtoReflect.Descriptor instead.
func (*MessageRequest) Descriptor() ([]byte, []int) {
	return file_tgnotifier_proto_rawDescGZIP(), []int{1}
}

func (x *MessageRequest) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *MessageRequest) GetParseMode() string {
	if x != nil && x.ParseMode != nil {
		return *x.ParseMode
	}
	return ""
}

func (x *MessageRequest) GetDisableNotification() bool {
	if x != nil && x.DisableNotification != nil {
		return *x.DisableNotification
	}
	return false
}

func (x *MessageRequest) GetProtectContent() bool {
	if x != nil && x.ProtectContent != nil {
		return *x.ProtectContent
	}
	return false
}

type SendMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            *bool                  `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Result        *TgMessage             `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	mi := &file_tgnotifier_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tgnotifier_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_tgnotifier_proto_rawDescGZIP(), []int{2}
}

func (x *SendMessageResponse) GetOk() bool {
	if x != nil && x.Ok != nil {
		return *x.Ok
	}
	return false
}

func (x *SendMessageResponse) GetResult() *TgMessage {
	if x != nil {
		return x.Result
	}
	return nil
}

type TgMessage struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MessageId       *int64                 `protobuf:"varint,1,opt,name=message_id,json=messageId" json:"message_id,omitempty"`
	Date            *uint64                `protobuf:"varint,2,opt,name=date" json:"date,omitempty"`
	MessageThreadId *int64                 `protobuf:"varint,3,opt,name=message_thread_id,json=messageThreadId" json:"message_thread_id,omitempty"`
	From            *TgUser                `protobuf:"bytes,4,opt,name=from" json:"from,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TgMessage) Reset() {
	*x = TgMessage{}
	mi := &file_tgnotifier_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TgMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TgMessage) ProtoMessage() {}

func (x *TgMessage) ProtoReflect() protoreflect.Message {
	mi := &file_tgnotifier_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TgMessage.ProtoReflect.Descriptor instead.
func (*TgMessage) Descriptor() ([]byte, []int) {
	return file_tgnotifier_proto_rawDescGZIP(), []int{3}
}

func (x *TgMessage) GetMessageId() int64 {
	if x != nil && x.MessageId != nil {
		return *x.MessageId
	}
	return 0
}

func (x *TgMessage) GetDate() uint64 {
	if x != nil && x.Date != nil {
		return *x.Date
	}
	return 0
}

func (x *TgMessage) GetMessageThreadId() int64 {
	if x != nil && x.MessageThreadId != nil {
		return *x.MessageThreadId
	}
	return 0
}

func (x *TgMessage) GetFrom() *TgUser {
	if x != nil {
		return x.From
	}
	return nil
}

type TgUser struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Id                      *int64                 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	FirstName               *string                `protobuf:"bytes,2,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName                *string                `protobuf:"bytes,3,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	Username                *string                `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	LanguageCode            *string                `protobuf:"bytes,5,opt,name=language_code,json=languageCode" json:"language_code,omitempty"`
	IsBot                   *bool                  `protobuf:"varint,6,opt,name=is_bot,json=isBot" json:"is_bot,omitempty"`
	IsPremium               *bool                  `protobuf:"varint,7,opt,name=is_premium,json=isPremium" json:"is_premium,omitempty"`
	AddedToAttachmentMenu   *bool                  `protobuf:"varint,8,opt,name=added_to_attachment_menu,json=addedToAttachmentMenu" json:"added_to_attachment_menu,omitempty"`
	CanJoinGroups           *bool                  `protobuf:"varint,9,opt,name=can_join_groups,json=canJoinGroups" json:"can_join_groups,omitempty"`
	CanReadAllGroupMessages *bool                  `protobuf:"varint,10,opt,name=can_read_all_group_messages,json=canReadAllGroupMessages" json:"can_read_all_group_messages,omitempty"`
	SupportsInlineQueries   *bool                  `protobuf:"varint,11,opt,name=supports_inline_queries,json=supportsInlineQueries" json:"supports_inline_queries,omitempty"`
	CanConnectToBusiness    *bool                  `protobuf:"varint,12,opt,name=can_connect_to_business,json=canConnectToBusiness" json:"can_connect_to_business,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *TgUser) Reset() {
	*x = TgUser{}
	mi := &file_tgnotifier_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TgUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TgUser) ProtoMessage() {}

func (x *TgUser) ProtoReflect() protoreflect.Message {
	mi := &file_tgnotifier_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TgUser.ProtoReflect.Descriptor instead.
func (*TgUser) Descriptor() ([]byte, []int) {
	return file_tgnotifier_proto_rawDescGZIP(), []int{4}
}

func (x *TgUser) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *TgUser) GetFirstName() string {
	if x != nil && x.FirstName != nil {
		return *x.FirstName
	}
	return ""
}

func (x *TgUser) GetLastName() string {
	if x != nil && x.LastName != nil {
		return *x.LastName
	}
	return ""
}

func (x *TgUser) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *TgUser) GetLanguageCode() string {
	if x != nil && x.LanguageCode != nil {
		return *x.LanguageCode
	}
	return ""
}

func (x *TgUser) GetIsBot() bool {
	if x != nil && x.IsBot != nil {
		return *x.IsBot
	}
	return false
}

func (x *TgUser) GetIsPremium() bool {
	if x != nil && x.IsPremium != nil {
		return *x.IsPremium
	}
	return false
}

func (x *TgUser) GetAddedToAttachmentMenu() bool {
	if x != nil && x.AddedToAttachmentMenu != nil {
		return *x.AddedToAttachmentMenu
	}
	return false
}

func (x *TgUser) GetCanJoinGroups() bool {
	if x != nil && x.CanJoinGroups != nil {
		return *x.CanJoinGroups
	}
	return false
}

func (x *TgUser) GetCanReadAllGroupMessages() bool {
	if x != nil && x.CanReadAllGroupMessages != nil {
		return *x.CanReadAllGroupMessages
	}
	return false
}

func (x *TgUser) GetSupportsInlineQueries() bool {
	if x != nil && x.SupportsInlineQueries != nil {
		return *x.SupportsInlineQueries
	}
	return false
}

func (x *TgUser) GetCanConnectToBusiness() bool {
	if x != nil && x.CanConnectToBusiness != nil {
		return *x.CanConnectToBusiness
	}
	return false
}

var File_tgnotifier_proto protoreflect.FileDescriptor

var file_tgnotifier_proto_rawDesc = string([]byte{
	0x0a, 0x10, 0x74, 0x67, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x74, 0x67, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x82,
	0x01, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x74, 0x67, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x9f, 0x01, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x72, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x14, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f,
	0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x54, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x2d, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74,
	0x67, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x54, 0x67, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x09,
	0x54, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x67, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x2e, 0x54, 0x67, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x22, 0xd9, 0x03, 0x0a, 0x06, 0x54, 0x67, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x62,
	0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x42, 0x6f, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x37,
	0x0a, 0x18, 0x61, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x15, 0x61, 0x64, 0x64, 0x65, 0x64, 0x54, 0x6f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x5f, 0x6a,
	0x6f, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x63, 0x61, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12,
	0x3c, 0x0a, 0x1b, 0x63, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x61, 0x6c, 0x6c, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x36, 0x0a,
	0x17, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x51, 0x75,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x17, 0x63, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x54, 0x6f, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x32, 0x53, 0x0a, 0x08,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64,
	0x12, 0x1e, 0x2e, 0x74, 0x67, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x74, 0x67, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6b, 0x75, 0x6b, 0x79, 0x6d, 0x62, 0x72, 0x2f, 0x74, 0x67, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x62, 0x08, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8,
	0x07,
})

var (
	file_tgnotifier_proto_rawDescOnce sync.Once
	file_tgnotifier_proto_rawDescData []byte
)

func file_tgnotifier_proto_rawDescGZIP() []byte {
	file_tgnotifier_proto_rawDescOnce.Do(func() {
		file_tgnotifier_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tgnotifier_proto_rawDesc), len(file_tgnotifier_proto_rawDesc)))
	})
	return file_tgnotifier_proto_rawDescData
}

var file_tgnotifier_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_tgnotifier_proto_goTypes = []any{
	(*SendMessageRequest)(nil),  // 0: tgnotifier.SendMessageRequest
	(*MessageRequest)(nil),      // 1: tgnotifier.MessageRequest
	(*SendMessageResponse)(nil), // 2: tgnotifier.SendMessageResponse
	(*TgMessage)(nil),           // 3: tgnotifier.TgMessage
	(*TgUser)(nil),              // 4: tgnotifier.TgUser
}
var file_tgnotifier_proto_depIdxs = []int32{
	1, // 0: tgnotifier.SendMessageRequest.message:type_name -> tgnotifier.MessageRequest
	3, // 1: tgnotifier.SendMessageResponse.result:type_name -> tgnotifier.TgMessage
	4, // 2: tgnotifier.TgMessage.from:type_name -> tgnotifier.TgUser
	0, // 3: tgnotifier.Messages.Send:input_type -> tgnotifier.SendMessageRequest
	2, // 4: tgnotifier.Messages.Send:output_type -> tgnotifier.SendMessageResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_tgnotifier_proto_init() }
func file_tgnotifier_proto_init() {
	if File_tgnotifier_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tgnotifier_proto_rawDesc), len(file_tgnotifier_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tgnotifier_proto_goTypes,
		DependencyIndexes: file_tgnotifier_proto_depIdxs,
		MessageInfos:      file_tgnotifier_proto_msgTypes,
	}.Build()
	File_tgnotifier_proto = out.File
	file_tgnotifier_proto_goTypes = nil
	file_tgnotifier_proto_depIdxs = nil
}
